signif(sum(wi * f(xi))/2, 10)
library(gaussquad)
f = function(x){sin(x^2)}
integrate(f, lower = 0, upper = 1)
n = 6
(xi = legendre.quadrature.rules(n)[[n]]$x)
(wi = legendre.quadrature.rules(n)[[n]]$w)
options(digits = 12)
signif(sum(wi * f(xi))/2, 10)
2 * signif(sum(wi * f(xi))/2, 10)
ReglaSimpson = function(a, b, f, n){
if(n %% 2 != 0) return("El número de nodos no es par")
h = (b - a) / n
xi = seq(from = a, to = b, length.out = n + 1)
yi = f(xi)
if(n > 2){
s1 = seq(2, n, by = 2)
s2 = seq(3, n, by = 2)
} else {
s1 = 2
s2 = c()
}
intApprox = (h/3) * (yi[1] + 4 * sum(yi[s1]) + 2 * sum(yi[s2]) + yi[n + 1])
return(intApprox)
}
ReglaSimpson(0, 1, f, 40)
N = 5
(n = N / h)
h = 0.01
N = 5
(n = N / h)
plot(solucion[,1], solucion[,2], type="l", xlab="x(t)", ylab="y(t)")
rm(list=ls())
f = function(x){
sin(x^2)
}
a = 0
b = 1
library(gaussquad)
g = function(t){
f(((b - a )* t + (a + b)) / 2) * ((b - a) / 2)
}
n = 6
(xi = legendre.quadrature.rules(n)[[n]]$x)
(wi = legendre.quadrature.rules(n)[[n]]$w)
options(digits=20)
(Igauss = sum(wi * g(xi)))
options(digits=20)
(Igaussf = sum(wi * f(xi)))
(Igauss = sum(wi * g(xi)))
(IR = integrate(f, lower = a, upper = b))
IR = IR$value
(IR = integrate(f, lower = a, upper = b))
IR = IR$value
abs(IR - Igauss)
ReglaTrapecio = function(a, b, f, n){
h = (b - a) / n
xi = seq(from = a, to = b, length.out = n + 1)
yi = f(xi)
intApprox = h * (yi[1]/2 + sum(yi[2:n]) + yi[n+1]/2)
return(intApprox)
}
n = 15000
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(Igauss - Itrapecio)
ReglaSimpson = function(a, b, f, n){
if(n %% 2 != 0) return("El número de nodos no es par")
h = (b - a) / n
xi = seq(from = a, to = b, length.out = n + 1)
yi = f(xi)
if(n > 2){
s1 = seq(2, n, by = 2)
s2 = seq(3, n, by = 2)
} else {
s1 = 2
s2 = c()
}
intApprox = (h/3) * (yi[1] + 4 * sum(yi[s1]) + 2 * sum(yi[s2]) + yi[n + 1])
return(intApprox)
}
ReglaSimpson(a, b, f, n)
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 500
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 100
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 200
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 1500
n = 150
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 180
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 160
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 170
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 1500
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(IR - Itrapecio)
n = 5000
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(IR - Itrapecio)
n = 10000
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(IR - Itrapecio)
n = 15000
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(IR - Itrapecio)
n = 16000
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(IR - Itrapecio)
n = 17000
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(IR - Itrapecio)
n = 20000
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(IR - Itrapecio)
n = 30000
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(IR - Itrapecio)
n = 50000
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(IR - Itrapecio)
n = 40000
(Itrapecio = ReglaTrapecio(a, b, f, n))
abs(IR - Itrapecio)
n = 150
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 100
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 50
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 80
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 90
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 95
n = 96
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 100
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 120
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 140
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 130
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 120
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 126
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 6
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 126
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
n = 6
(Isimpson = ReglaSimpson(a, b, f, n))
abs(IR - Isimpson)
ReglaSimpson(a, b, f, n)
ReglaTrapecio(a, b, f, n)
n = 1500
ReglaSimpson(a, b, f, n)
ReglaTrapecio(a, b, f, n)
n = 100
ReglaSimpson(a, b, f, n)
ReglaTrapecio(a, b, f, n)
integrate(f, lower = -1, upper = 1)
14/42
valores = c(1, 3, 4, 20, 28, 41, 45, 48, 64, 78, 80, 89, 91, 95)
rm(list=ls())
valores = c(1, 3, 4, 20, 28, 41, 45, 48, 64, 78, 80, 89, 91, 95)
frecuencias = c(46, 13, 34, 44, 16, 21, 11, 50, 17, 8, 26, 12, 31, 47)
(media = sum(valores * frecuencias)/sum(frecuencias))
(desvTip = sum((valores - media)^2 * frecuencias) / sum(frecuencias))
(varPob = sum((valores - media)^2 * frecuencias) / sum(frecuencias))
(desvTip = sqrt(varPob))
signif(desvTip, 4)
rm(list=ls())
valores = c(1, 3, 4, 20, 28, 41, 45, 48, 64, 78, 80, 89, 91, 95)
frecuencias = c(46, 13, 34, 44, 16, 21, 11, 50, 17, 8, 26, 12, 31, 47)
(media = sum(valores * frecuencias)/sum(frecuencias))
(varPob = sum((valores - media)^2 * frecuencias) / sum(frecuencias))
(desvTip = sqrt(varPob))
signif(desvTip, 4)
1 - ((15/42) + (23/42) - (10/42))
(0.9 * 0.07) / (0.9 * 0.07 + 0.02 * 0.93)
signif((0.9 * 0.07) / (0.9 * 0.07 + 0.02 * 0.93), 4)
valores = c(-12, -11, -8, -4, 1, 6)
probs = c(3/13, 2/13, 2/39, 4/39, 1/3, 5/39)
rm(list=ls())
valores = c(-12, -11, -8, -4, 1, 6)
probs = c(3/13, 2/13, 2/39, 4/39, 1/3, 5/39)
mu = sum(valores * probs)
(mu = sum(valores * probs))
(sigma2 = sum( (valores - mu)^2 * probs))
(sigma = signif(sqrt(sigma2), 4))
f = function(x){10 * sin(20 * x)}
integrate(f, lower = 0, upper = pi/25)$value
f = function(x){10 * sin(20 * x)}
integrate(f, lower = 0, upper = pi/25)$value
f = function(x){10 * sin(20 * x)}
prob = integrate(f, lower = 0, upper = pi/25)$value
signif(prob, 4)
sum(dbinom(3:5, size = 7, prob = 0.5))
prob = sum(dbinom(3:5, size = 7, prob = 0.5))
signif(prob, 4)
solucion = sum(dbinom(3:5, size = 7, prob = 0.5))
signif(solucion, 4)
solucion = pbinom(5, size = 7, prob = 0.5)
f = function(x){10 * sin(20 * x)}
solucion = integrate(f, lower = 0, upper = pi/25)$value
signif(solucion, 4)
solucion = sum(dbinom(3:5, size = 7, prob = 0.5))
signif(solucion, 4)
solucion = pbinom(5, size = 7, prob = 0.5) - pbinom(2, size = 7, prob = 0.5)
signif(solucion, 4)
f = function(x){10 * sin(20 * x)}
probabilidad = integrate(f, lower = 0, upper = pi/25)$value
signif(probabilidad, 4)
qt(0.5, df = 25)
qt(0.5, df = 25)
(alfa = 1 - nc)
nc = 0.99
(alfa = 1 - nc)
(talfamedios = qt(1 - alfa/2, df = n - 1))
n = 3
xbar = -21.2
s = 8.79
nc = 0.99
(alfa = 1 - nc)
(talfamedios = qt(1 - alfa/2, df = n - 1))
(intervalo = xbar + c(-1, 1) * talfamedios * s / sqrt(n))
intervalo[2]
signif(intervalo[2], 4)
rm(list=ls())
n = 3
xbar = -21.2
s = 8.79
nc = 0.99
(alfa = 1 - nc)
(talfamedios = qt(1 - alfa/2, df = n - 1))
(intervalo = xbar + c(-1, 1) * talfamedios * s / sqrt(n))
signif(intervalo[2], 4)
rm(list=ls())
n = 17
xbar = -7.76
s = 8.59
mu0 = -1.93
Estadistico = (xbar - mu0) / (s/sqrt(n))
(Estadistico = (xbar - mu0) / (s/sqrt(n)))
(pValor = 2 * (1 - pt(abs(Estadistico), df = n - 1)))
X = c(4.36, 4.37, 8.69, 9.23, 10.2, 13.4, 16.7, 19.5)
Y = c(16.5, 16.2, 24.6, 18.4, 25.8, 41.9, 51.2, 43.2)
rm(list=ls())
X = c(4.36, 4.37, 8.69, 9.23, 10.2, 13.4, 16.7, 19.5)
Y = c(16.5, 16.2, 24.6, 18.4, 25.8, 41.9, 51.2, 43.2)
X = c(4.36, 4.37, 8.69, 9.23, 10.2, 13.4, 16.7, 19.5)
Y = c(16.5, 16.2, 24.6, 18.4, 25.8, 41.9, 51.2, 43.2)
(lmXY = lm(Y~X))
signif(lmXY[1], 4)
signif(lmXY$coefficients[1], 4)
rm(list=ls())
X = c(4.36, 4.37, 8.69, 9.23, 10.2, 13.4, 16.7, 19.5)
Y = c(16.5, 16.2, 24.6, 18.4, 25.8, 41.9, 51.2, 43.2)
(lmXY = lm(Y~X))
signif(lmXY$coefficients[1], 4)
getCodeList = function(file){
fileLines = readLines(file, skipNul = TRUE)
require(stringi)
codeRegex = "\\otrofichero\\{.+\\.R\\}"
codePositions=regexpr(pattern = codeRegex, text = fileLines)
codeLines = fileLines[which(codePositions != -1)]
codeRegex = "\\{([[:alnum:]]+-*_*)+\\.R\\}"
codeNames = stri_extract(codeLines, regex = codeRegex)
codeNames = gsub(x = codeNames, replacement = "",pattern = "{",fixed = TRUE)
codeNames = gsub(x = codeNames, replacement = "",pattern = "}",fixed = TRUE)
return(codeNames)
}
getCodeList(file = "Tutorial-05.Rnw")
setwd("~/Dropbox/POSTDATA_2")
getCodeList(file = "Tutorial-05.Rnw")
rnwFiles = dir(pattern = ".+\\.Rnw")
rnwFiles
codeFiles = unlist(lapply(rnwFiles, getCodeList))
codeFiles
sapply(1:length(codeFiles),
function(i){
file.copy(paste0("./datos/",codeFiles[i],collapse = ""),to = "./code/")
}
)
En la primera celda hemos empezado a usar Python como una calculadora. Aparte de sumas podemos hacer, naturalmente, multiplicaciones y divisiones. Prueba a ejecutar las siguientes celdas:
print(2 + 3)
fichero = "Tutorial-00.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
rm(list=ls())
library(knitr)
fichero = "Tutorial-00.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
setwd("C:/Dropbox/PostData_Fernando2/TutorialesR")
knit2pdf(input=fichero, encoding="UTF-8")
knit2pdf(input=fichero, encoding="UTF-8")
knit2pdf(input=fichero, encoding="UTF-8")
knit2pdf(input=fichero, encoding="UTF-8")
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-01.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
rm(list=ls())
library(knitr)
fichero = "Tutorial-00.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-01.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
rm(list=ls())
library(knitr)
fichero = "Tutorial-00.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-01.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
# Es MUY IMPORTANTE reiniciar la sesión de R antes.
rm(list=ls())
library(knitr)
#       (fichero = paste("000-CursoEstadistica", ".tex", sep="",collapse=""))
#       knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-01.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
# Es MUY IMPORTANTE reiniciar la sesión de R antes.
rm(list=ls())
library(knitr)
#       (fichero = paste("000-CursoEstadistica", ".tex", sep="",collapse=""))
#       knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-01.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
# Es MUY IMPORTANTE reiniciar la sesión de R antes.
rm(list=ls())
library(knitr)
#       (fichero = paste("000-CursoEstadistica", ".tex", sep="",collapse=""))
#       knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-01.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
# Es MUY IMPORTANTE reiniciar la sesión de R antes.
rm(list=ls())
library(knitr)
#       (fichero = paste("000-CursoEstadistica", ".tex", sep="",collapse=""))
#       knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-01.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
for(i in 10:13){
(numTutorial = i)
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
# Es MUY IMPORTANTE reiniciar la sesión de R antes.
rm(list=ls())
library(knitr)
#       (fichero = paste("000-CursoEstadistica", ".tex", sep="",collapse=""))
#       knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-01.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
for(i in 2:9){
(numTutorial = paste("0",i,collapse="", sep=""))
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
for(i in 10:13){
(numTutorial = i)
(fichero = paste("Tutorial-", numTutorial, ".Rnw", sep="",collapse=""))
knit2pdf(input=fichero, encoding="UTF-8")
}
setwd("C:/Dropbox/PostData_Fernando2/TutorialesPython2015")
rm(list=ls())
library(knitr)
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
rm(list=ls())
library(knitr)
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-02-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-02-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-02-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
fichero = "Tutorial-00-py.Rnw"
knit2pdf(input=fichero, encoding="UTF-8")
